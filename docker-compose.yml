version: '3.9'

services:
  backend:
    container_name: notify-automation-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: notify-automation-backend-image
    ports:
      - "1000:8000"
    volumes:
      - ./backend/app:/app
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq
      - redis

  celery_worker:
    container_name: notify-automation-celery-worker
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: notify-automation-celery-worker-image
    command: celery -A celery_config.celery_beat worker --loglevel=info
    volumes:
      - ./backend/app:/app
    environment:
      - PYTHONPATH=/app
    env_file:
      - .env
    depends_on:
      - backend
      - rabbitmq
      - redis
      - db
    restart: always

  celery_beat:
    container_name: notify-automation-celery-beat
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: notify-automation-celery-beat-image
    command: celery -A celery_config.celery_beat beat --loglevel=info --scheduler celery.beat.PersistentScheduler --schedule /app/celerybeat-data/celerybeat-schedule
    volumes:
      - ./backend/app:/app
      - beat-data:/app/celerybeat-data
    environment:
      - PYTHONPATH=/app
    env_file:
      - .env
    depends_on:
      - backend
      - rabbitmq
      - redis
      - db
    restart: always

  db:
    container_name: notify-automation-db
    image: postgres:15
    restart: always
    env_file:
      - .env
    ports:
      - "5000:5432"
    volumes:
      - pgdata-notify-automation:/var/lib/postgresql/data

  redis:
    container_name: notify-automation-redis
    image: redis:7
    restart: always
    ports:
      - "6378:6379"

  rabbitmq:
    container_name: notify-automation-rabbitmq
    image: rabbitmq:3-management
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password

volumes:
  pgdata-notify-automation:
  beat-data:
